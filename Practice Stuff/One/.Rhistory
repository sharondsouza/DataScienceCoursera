b <-a[a$Ozone>31 & a$Temp>90, ]
b
b <- complete.cases(b)
b
b
b <-a[a$Ozone>31 & a$Temp>90, ]
c <- complete.cases(b)
c(b)
c
b <-a[a$Ozone>31 & a$Temp>90, ]
b
c(b,)
b <-a[a$Ozone>31 & a$Temp>90, ]
b
c <- complete.cases(b$Solar.R)
c(b)
b(c)
b
b[c]
b[c, ]
b
d <- b[c, ]
mean(d$Solar.R)
a
b <- a$Month>6
b
b[a, ]
b[a$Month>6, ]
a[a$Month>6, ]
b <- a[a$Month>6, ]
b
b <- a[a$Month > 6, ]
print (a)
a <- read.csv('hw1_data.csv')
print (cont)
a <- read.csv('hw1_data.csv')
print ('The table is as follows -')
print a
print ('The table is as follows -')
source('C:/Users/212339863/Box Sync/- My Folders -/05 - GitHub/GitHub/DataScienceCoursera/Practice Stuff/One/q18.R')
a <- read.csv('hw1_data.csv')
a
b
b <- a[a$Ozone>31 & a$Temp>90,]
b
c <- complete.cases(b)
b(c)
c(b)
b[c]
c[b]
b
c <- complete.cases(b)
b[c]
c[b]
d <- b[c]
d <- b[c, ]
d
print e
print (e)
mean(d$Solar.R)
a
b < a[a$Month>6, ]
b < a[a$Month<6, ]
b <- a[a$Month>6, ]
b
mean(d$Temp)
b
mean(d$Temp)
b <- a[a$Month=6,]
b
c <- complete.cases(b)
a <- read.csv('hw1_data.csv')
b <- a[a$Month=6,]
c <- complete.cases(b)
d <- b[,c]
mean(d$Temp)
a <- read.csv('hw1_data.csv');b <- a[a$Month=6,];c <- complete.cases(b);d <- b[,c];mean(d$Temp)
b <- a[a$Month==6,]
a <- read.csv('hw1_data.csv')
b <- a[a$Month==6,]
b
c <- complete.cases(b)
d <- b[c,]
mean(d$Temp)
d
mean(b$Temp)
max(b$Ozone)
max(d$Ozone)
a <- read.csv('hw1_data.csv')
b <- a[a$Month==5,]
b
c <- complete.cases(b)
c
d <- b[c, ]
d
max(d$Ozone)
c <- complete.cases(b)
x <- 1:4
y <- 2
x+y
x <- c(17,14,4,5,13,12,10)
a
a[1:2,]
a[152:153,]
a[47,]
mean(b$Ozone)
mean(c$Ozone)
a
b <- complete.cases(a)
c <- a[b,]
c
mean(c$Ozone)
R.version.string
install.packages('swirl')
packageVersion('swirl')
library(swirl)
ls()
rm(list=ls())
ls()
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create('C:/Users/212339863/Box Sync/- My Folders -/05 - GitHub/GitHub/DataScienceCoursera/Practice Stuff/One/testdir')
dir.create('testdir')
setwd('testdir')
file.create('mytest.R')
ls()
list.files()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest2.R')
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R')
file.path('folder1','folder2')
?dir.create
dir.create(file.path('folder1', 'folder2'))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(mq_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect>=6
my_char <- c('My','name','is')
my_char
paste(my_char,collapse=' ')
c(my_char,"Sharon")
my_name <- c(my_char,"Sharon")
my_name
paste(my_name,collapse=' ')
paste('Hello','World',sep=" ")
paste('Hello','World!',sep=" ")
paste('Hello','world!',sep=" ")
paste(1:3,c('X','Y','Z'))
paste(1:3,c('X','Y','Z'),sep='')
paste(LETTERS,1:4,sep = '-')
x %*% y
swirl()
x<-c(44,NA,5,NA)
x<-x*3
x<- x * 3
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample (c(y,z),100)
my_na <- is.na(my_data)
my-Na
my_na
my_data ==NA
sum(my_na)
my_data
0/0
Inf-Inf
swirl()
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c(foo,bar,norf)
names(vect2) <- c('foo','bar','norf')
identical(vect,vect2)
vect['bar']
vect[c('foo','bar')]
myvector[1:20]
myvector <- c[1:20]
myvector <- c(1:20)
myvector <- 1:20
myvector <- [1:20]
myvector <- 1:20
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix(4,5,1:20)
my_matrix2 <- matrix(4,5,1:20)
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c('Bill','Gina','Kelly', 'Sean')
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c('patient','age', 'weight','bp','rating','test')
colnames(cnames,my_data)
colnames(my_data)
colnames(my_data) <- cnames
my_data
clear
for(i in 1:10)
{}
for(i in 1:10) { print(i)}
for (j in seq_len(ncols(x)))
for (i in 1:10)
{
for (j in seq_len(ncols(x)))
{
print (x[i,j])
}
}
for (i in seq_len(nrow(x)))
print (x[i,j])
for (i in 1:10)
{
print (i)
}
x <- c('a','b','c','d')
for (i in 1:4)
{
print (x[1])
}
for (i in seq_along(x))
{
print(x[i])
}
for (letter in x)
{
print (letter)
}
x <- matrix(1:6,2,3)
for (i in seq_len(nrow(x)))
{
for (j in seq_len(ncol(x)))
{
print (x[i,j])
}
}
count <- 0
while (count<10)
{
print(count)
count = count + 1
}
z <- 5
while (z >=3 && z <=10)
{
print(z)
coin <- rbinom(1,1,0.5)
if (coin==1)
{
z <- z+1
}
else
{
z <- z-1
}
}
add2 <- function(x,y)
{
x+y
}
add2 <- function(x,y)
{
x+y
}
add2(3,4)
abovenum <- function(a,b) {
use <- x>n
x[use]
}
x <- 1:20
abovenum(x,12)
abovenum <- function(a,b) {
use <- x>b
x[use]
}
x <- 1:20
abovenum(x,12)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <-  mean(y[,i])
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <-  mean(y[,i], na.rm = removeNA)
}
means
}
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
f1
file <- 'specdata/001.csv'
file
f1
files
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
source('C02W02_p1.R')
pollutantmean('specdata','nitrate',1:20)
swirl()
getwd()
library(swirl)
rm(list=ls())
swirl()
TRUE == TRUE
(FALSE == TRUE ) == FALSE
6 == 7
6 < 7
10 < = 10
10 <= 10
5 != 7
5 != 7
5 NOT= 7
5 != 7
5 == 7
!(5==7)
FALSE & FALS
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(c(ints>7))
which(c(ints>7))
which(c(ints>5))
which(c(ints>7))
info()
ints > 7
which(c(ints>7))
skip()
any(ints < 0)
all(ints > 0)
swirl()
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11.5)
remainder(11,5)
remainder (divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun")
paste("Programming","is","fun!")
submit()
telegram("I love fish.")
submit()
mad_libs('England','agitated','paper')
submit()
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%b %d, %Y %H:%M")
t4 <- strptime(t3, "%b %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
4
t4
class(t4)
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(),t1,units='days')
